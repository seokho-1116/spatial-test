plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral().content {
        excludeModule("javax.media", "jai_core")
    }
    maven { url 'https://repo.osgeo.org/repository/release/' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'org.hibernate.orm:hibernate-spatial:6.2.5.Final'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.geotools:gt-epsg-hsql:29.1'
    implementation 'org.geotools:gt-referencing:29.1'
    implementation 'org.geotools:gt-metadata:29.1'
    implementation 'org.geotools:gt-opengis:29.1'
    implementation 'org.geotools:gt-wfs-ng:29.1'
    implementation 'org.geotools:gt-process:29.1'
    implementation 'org.geotools:gt-transform:29.1'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor 'com.querydsl:querydsl-apt:5.0.0:jakarta'
    annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
    annotationProcessor 'jakarta.persistence:jakarta.persistence-api'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

def generated = 'src/main/generated'

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

sourceSets {
    main.java.srcDirs += [ generated ]
}

clean {
    delete file(generated)
}